[{"content":"kindle资源 幸福的味道 https://ebook2.lorefree.com/ https://lorefree.com/ http://www.ireadweek.com/ 公众号Sobook https://sobooks.cc/ 小书屋 www.mebook.cc \\ 子午书简 https://5kindle.com/ 已废弃 http://shuxiangjia.cn/?cate=2 目录 SooHub 2022.09.13已打不开 https://www.soohub.com/ finelybook http://finelybook.com/ 好读 http://haodoo.net/ 长城之外 Library Genesis mobi\u0026amp;PDF http://gen.lib.rus.ec/ https://libgen.li/ https://libgen.gs/ https://sci-hub.41610.org/library-genesis https://libgen.rs/search.php?\u0026amp;req=KVM\u0026amp;phrase=1\u0026amp;view=simple\u0026amp;column=def\u0026amp;sort=year\u0026amp;sortmode=DESC https://libgen.rs/ zlibrary PDF https://zh.u1lib.org/ https://en.ru1lib.org/ FreeTechBooks 计算机科学类 http://www.freetechbooks.com/ https://www.freetechbooks.com/ 古登宝计划 http://www.gutenberg.org/ Planet eBook 国内可访问 https://www.planetebook.com/ 布克书屋 https://iao.su/3064/comment-page-1 https://www.bukebook.cn yudu https://express.yudu.com/ kindle 社区 书伴 https://bookfere.com/post/4.html 参考链接： http://www.360doc.com/content/20/0219/14/5008209_893150066.shtml http://www.sohu.com/a/215001801_490529\n","permalink":"https://liuz0123.gitee.io/zain/posts/read/read/ebookwebsite/","summary":"kindle资源 幸福的味道 https://ebook2.lorefree.com/ https://lorefree.com/ http://www.ireadweek.com/ 公众号Sobook https://sobooks.cc/ 小书屋 www.mebook.cc \\ 子午书简 https://5kindle.com/ 已废弃 http://shuxiangjia.cn/?cate=2 目录 SooHub 2022.09.13已打不开 https://www.soohub.com/ finelybook http://finelybook.com/ 好读 http://haodoo.net/ 长城之外 Library Genesis mobi\u0026amp;PDF","title":"电子书网站"},{"content":"\r一个午后点燃了一颗心 岁月不会抹去我的记忆里你所给的阳光 却悄悄的使我不同 一个女孩在有心人的心中 永远不会遗忘 想到这些 十分犹豫 生活太脆太薄 甚至不比一株花经得住风雨年华 倾心自然的眼啊 人生 热情的可珍 同一人事上 第二次的凑巧是不会有的 我平生只见过一次天蓝 给自己宽慰 说\n行过很多路 见过多次海 看过许多天空 却只恋一个最好心灵的人。 \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash;2022.10.03\n","permalink":"https://liuz0123.gitee.io/zain/posts/na/%E8%87%B4%E5%A8%9C/","summary":"一个午后点燃了一颗心 岁月不会抹去我的记忆里你所给的阳光 却悄悄的使我不同 一个女孩在有心人的心中 永远不会遗忘 想到这些 十分犹豫 生活太脆太薄 甚至不比","title":"致娜"},{"content":" 💓 这个网站是为你准备的礼物，没有计划添加文字，为了获得你的原谅想在每一页写上文字，由于我不是做前端的水平有限，最近发现很多bug，特别是不同屏幕适应问题，在大一点的屏幕显示效果很好，笔记本屏幕比较小的话显示有问题，尝试很多方法暂时没能修复，所以就把文字内容放到我的个人博客，添加一个写给娜的专栏，点击每一页的图片跳到这里对应的文章。另外的网站会添一些好玩的小功能，简单的写几句话。 从为什么加你开始吧，因为襄阳，从小就知道这个城市，而且在小时候内心有一种向往，包含了祖辈的敬仰。你是一年多来第一次主动接触的女孩，因为这一年多我花很大一部分时间用来走出上一段感情，这就是你说的我感情不稳定的原因，关于过去的感情会专门写一篇，其实想更多的了解你的过去。 网站有一个是一个计数器会自动记录我们相识多久了，到10月2号是第10天，10天时间我们居然那么熟悉了，对于一个慢热的人，从未如此快速的走近其他人。我们聊了很多很多了，你说的很多话我都记得了，很多还需要未来来实现。你是一个很有智慧的女生，才10天怎么可能会接受一个人呢，我不知道哪里抽筋了，就在出差之前非要一个结果，那个晚上一个晚上没有睡，终于想明白了，是因为我太想走进你的生活，想得走火入魔一样。此刻想想才10天，未来日子还有很久很久呢，即使出差也就一两个月，放在时间的长河里太短太短了。 看看那个晚上自己说的话，真的应该抽我自己，怎么写出那么自私、自我的话，心中有那么多多情感要表达，却偏偏写了那样伤你心的话。我是你也是会删了，永远不想在见到这个人。但请相信我，我是一个知错能改的，就像我们一开始那样你说需要分享式交流，这是你给我的一个成长启迪。让你相信不是说说就行的，需要看怎么做。就当这是一次对我的惩罚吧，你期待一个成熟稳重的人，我是这样的性格当然还有很多不成熟的地方需要完善，这些都不是我说说，而是应该相处后你来评价的。 每次和你聊完天我都会思考哪里有没有说的不合适的，比如关于随礼那次，十一我遇到了同样的事情，当时我说的和我做的就很不一样，我还是主动随了，因为那是对曾经友谊的纪念。2号晚上你发消息的我看了很多很多遍，读懂你很多顾虑、感受还有给我的的机会，平时在生活中我是很照顾他人的感受的，朋友同事都这样评价过我。 关于信任你做的很对很对，女孩子保护好自己，我为什么想知道你离那个地铁站近，是因为第三个礼物需要送到。你的观点是需要继续观察观察我，这是合情合理的。我需要有耐心去让你观察与评价。耐心，一个长跑型选手是很有耐心的。 我知道你会认为我写的上面的东西全篇都是自我，很多都是回想、思考你所说的话后我想我应该怎么做的。 关于未来计划，不知道能不能再次打动你，获得你的原谅，但我会在一个不让你厌烦的距离来请求你的谅解,10天对应的最少是10个月吧，应该会是更久吧。网站每周周末必更，也可能会一周两更。\n","permalink":"https://liuz0123.gitee.io/zain/posts/na/%E9%81%93%E6%AD%89/","summary":"💓 这个网站是为你准备的礼物，没有计划添加文字，为了获得你的原谅想在每一页写上文字，由于我不是做前端的水平有限，最近发现很多bug，特别是不同","title":"请求娜的原谅"},{"content":"git操作 # 下载代码，ssh或https 一种方式出错换用另一种 git clone # 创建分支 git checkout -b br_master # 提交 git status git add . git commit # 合并到前一个commit git commit --amend # 拉取更新代码 git pull # 推送 git push # 合并已push的commit git rebase -i HEAD~n # 强制更新覆盖本次 git fetch --all git reset --hard HEAD git pull # 强制推送 git push -u origin br_master --force # 回合代码 git rebase master # 回退已提交commit git reset --soft \u0026lt;commit-ID\u0026gt; # 忽略部分文件提交 git add filename # 放入本地栈 git stash -u -k git commit git push # 弹出本地栈 git stash pop git配置 git config --global user.name \u0026#34;xxx\u0026#34; git config --global user.email \u0026#34;xxx@163.com\u0026#34; git config --list user.name=xxx user.email=xxx@163.com # 生成秘钥 ssh-keygen -t rsa -C \u0026#39;xxx@163.com\u0026#39; # cd ~/.ssh 将 id_rsa.pub 添加道GitHub # 测试链接 ssh -T git@github.com # 设置默认编辑为vim git config --global core.editor \u0026#34;vim\u0026#34; 玩转WSL(6)之Git配置\ngit同时配置Gitee和Github\nGit设置换行符为LF\n","permalink":"https://liuz0123.gitee.io/zain/posts/blog/git/","summary":"git操作 # 下载代码，ssh或https 一种方式出错换用另一种 git clone # 创建分支 git checkout -b br_master # 提交 git status git add . git commit # 合并到前一个commit git commit --amend # 拉","title":"git"},{"content":"python logging # logging.yaml： version: 1 disable_existing_loggers: true formatters: standard: format: \u0026#34;%(asctime)s - %(name)s - %(levelname)s - %(message)s\u0026#34; error: format: \u0026#34;%(levelname)s \u0026lt;PID %(process)d:%(processName)s\u0026gt; %(name)s.%(funcName)s(): %(message)s\u0026#34; handlers: console: class: logging.StreamHandler level: DEBUG formatter: standard stream: ext://sys.stdout info_file_handler: class: logging.handlers.RotatingFileHandler level: INFO formatter: standard filename: /tmp/info.log maxBytes: 10485760 # 10MB backupCount: 20 encoding: utf8 error_file_handler: class: logging.handlers.RotatingFileHandler level: ERROR formatter: error filename: /tmp/errors.log maxBytes: 10485760 # 10MB backupCount: 20 encoding: utf8 debug_file_handler: class: logging.handlers.RotatingFileHandler level: DEBUG formatter: standard filename: /tmp/debug.log maxBytes: 10485760 # 10MB backupCount: 20 encoding: utf8 critical_file_handler: class: logging.handlers.RotatingFileHandler level: CRITICAL formatter: standard filename: /tmp/critical.log maxBytes: 10485760 # 10MB backupCount: 20 encoding: utf8 warn_file_handler: class: logging.handlers.RotatingFileHandler level: WARN formatter: standard filename: /tmp/warn.log maxBytes: 10485760 # 10MB backupCount: 20 encoding: utf8 root: level: NOTSET handlers: [console] propogate: yes loggers: \u0026lt;module\u0026gt;: level: INFO handlers: [console, info_file_handler, error_file_handler, critical_file_handler, debug_file_handler, warn_file_handler] propogate: no \u0026lt;module.x\u0026gt;: level: DEBUG handlers: [info_file_handler, error_file_handler, critical_file_handler, debug_file_handler, warn_file_handler] propogate: yes # logging.py import os import yaml import logging.config import logging import coloredlogs def setup_logging(default_path=\u0026#39;logging.yaml\u0026#39;, default_level=logging.INFO, env_key=\u0026#39;LOG_CFG\u0026#39;): \u0026#34;\u0026#34;\u0026#34; | **@author:** Prathyush SP | Logging Setup \u0026#34;\u0026#34;\u0026#34; path = default_path value = os.getenv(env_key, None) if value: path = value if os.path.exists(path): with open(path, \u0026#39;rt\u0026#39;) as f: try: config = yaml.safe_load(f.read()) logging.config.dictConfig(config) coloredlogs.install() except Exception as e: print(e) print(\u0026#39;Error in Logging Configuration. Using default configs\u0026#39;) logging.basicConfig(level=default_level) coloredlogs.install(level=default_level) else: logging.basicConfig(level=default_level) coloredlogs.install(level=default_level) print(\u0026#39;Failed to load configuration file. Using default configs\u0026#39;) 参考链接：\nhttps://blog.csdn.net/weixin_43988680/article/details/123528294 https://zhuanlan.zhihu.com/p/425678081 c log zlog https://blog.csdn.net/twd_1991/article/details/80481920\nhttp://hardysimpson.github.io/zlog/UsersGuide-CN.html\n","permalink":"https://liuz0123.gitee.io/zain/posts/tech/logging/","summary":"python logging # logging.yaml： version: 1 disable_existing_loggers: true formatters: standard: format: \u0026#34;%(asctime)s - %(name)s - %(levelname)s - %(message)s\u0026#34; error: format: \u0026#34;%(levelname)s \u0026lt;PID %(process)d:%(processName)s\u0026gt; %(name)s.%(funcName)s(): %(message)s\u0026#34; handlers: console: class: logging.StreamHandler level: DEBUG formatter: standard stream: ext://sys.stdout info_file_handler: class: logging.handlers.RotatingFileHandler level: INFO formatter: standard filename: /tmp/info.log maxBytes: 10485760 # 10MB backupCount: 20 encoding: utf8 error_file_handler: class: logging.handlers.RotatingFileHandler level: ERROR formatter:","title":"logging"},{"content":"","permalink":"https://liuz0123.gitee.io/zain/posts/blog/markown/","summary":"","title":"Markown"},{"content":"查看大小 # 查看系统目录大小 df -lh # 查看当前目录下文件大小 du -h --max-depth=1 权限 chmod chown ","permalink":"https://liuz0123.gitee.io/zain/posts/blog/linuxcommand/","summary":"查看大小 # 查看系统目录大小 df -lh # 查看当前目录下文件大小 du -h --max-depth=1 权限 chmod chown","title":"LinuxCommand"},{"content":"1.cmake简述 CMake是跨平台编译管理工具,为第三方依赖和引入,创建编译系统,程序测试及安装.Cmake工具使用CMakeLists.txt文件,跨平台执行相同编译命令,生成对应平台的可执行程序或者链接库.\nCMake工程简单例子\ncmake_minimum_required(VERSION 3.12) project(myproj) find_package(Poco REQUIRED COMPONENTS Net Util) add_executable(MyExe) target_source(MyExe PRIVATE \u0026#34;main.cpp\u0026#34;) target_link_library(MyExe PRIVATE Poco::Net PocoUtil) target_complie_definition(MyExe PRIVATE std_cxx_14) 2.Target 和围绕 Target 的配置 C/C++工程通常都是为了生成可执行程序或者链接库，在现代 CMake 里他们被统称为target，创建命令分别是add_library()和add_executable()。其中链接库的类型又分为很多种，最常用的就是SHARED以及STATIC，在命令中加入关键词进行声明：add_library(MyLib SHARED)，第一个参数为target的名称，后续的配置都需要用到这个名字。 指定target的源文件：\ntarget_source(MyLib PRVIATE \u0026#34;main.cpp\u0026#34; \u0026#34;func.cpp\u0026#34;) PRIVATE关键词用于描述参数的“应用范围”，此外还有INTERFACE和PUBLIC两种可能的值\n较多的源文件，可以使用 CMake 的file命令进行遍历拿到全部的源文件\nfile(GLOB_RECURSE SRCS ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp) 命令第一个参数GLOB_RECURSE表明递归的查找子文件夹，第二个参数SRCS则是存储结果的变量名，第三个参数为目标文件的匹配模式，找到符合条件的 cpp 文件后，他们的路径会以字符串数组的形式保存在 SRCS 变量中，使用方式如下：\ntarget_source(MyLib PRIVATE ${SRCS}) 配置target时通常还需要指定头文件目录：\ntarget_include_directories(MyLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/include/) 编译时需要的语言特性：\ntarget_compile_features(MyLib PRIVATE std_cxx_14) 编译时的宏定义：\ntarget_compile_definitions(MyLib PRIVATE LogLevel=3) 参数想直接传给底层的编译器（比如 gcc, clang, cl），可以使用\ntarget_compile_options(MyLib PRIVATE -Werror -Wall -Wextra) 3.Build Specification 和 Usage Requirement C/C++通过 include 头文件的方式引入依赖，在动态或静态链接后可以调用依赖实现。一个可执行程序可能会依赖链接库，链接库也同样可能依赖其他的链接库 CMake 提供的解决方案是，在对 target 进行配置时，可以规定配置的类型，分为 build specification 和 usage requirement 两类，会影响配置的应用范围。Build specification 类型的配置仅在编译的时候需要满足，通过PRIVATE关键字声明；Usage requirement 类型的配置则是在使用时需要满足，即在其他项目里，使用本项目已编译好的 target 时需要满足，这种类型的配置使用INTERFACE关键词声明。在实际工程中，有很多配置在编译时以及被使用时都需要被满足的，这种配置通过PUBLIC关键词进行声明。\n一个 library，在编译时静态链接了 Boost，在我们的实现文件中使用了 c++14 的特性，并用到了 Boost 的头文件和函数。随后我们对外发布了这个库，其中有头文件和预编译好的动态链接库。尽管我们的实现代码里用了 C++14，但在对外提供的头文件中只用到 C++03 的语法，也没有引入任何 Boost 的代码。这种情况下，当其他工程在使用我们的 library 时，其使用的编译器不需要开启 C++14 的支持，开发环境下也不需要安装 Boost。我们 library 的 CMake 配置中可以这么写：\ntarget_compile_features(MyLib PRIVATE cxx_std_14) target_link_libraries(MyLib PRIVATE Boost::Format) PRIVATE 说明 c++14 的支持只在编译时需要用到，Boost 库的链接也仅在编译时需要。但如果我们对外提供的头文件中也使用了 C++14，那么就需要使用 PUBLIC 修饰，改为：\ntarget_compile_features(MyLib PUBLIC cxx_std_14) target_link_libraries(MyLib PRIVATE Boost::Format) 当 library 是 header-only 时，我们的工程是不需要单独编译的，因此也就没有 build specification，通过INTERFACE修饰配置即可\narget_compile_features(MyLib INTERFACE cxx_std_14) Usage requirement 类型的配置，即通过INTERFACE或是PUBLIC修饰的配置是会传递的，比如 LibA 依赖 LibB 后，会继承 LibB 的 usage requirement，此后 LibC 依赖 LibB 时，LibA 和 libB 的 usage requirement 都会继承下来，\n4.寻找和使用链接库 C/C++标准没有规范库的安装位置和安装形式，通过 CMake 提供的方案寻找依赖，不光可以定位到头文件目录和链接库路径，还能够获取到库的 usage requirement。 在 CMake 中寻找第三方库的命令为find_package，其背后的工作方式有两种，一种基于 Config File 的查找，另一种则是基于 Find File 的查找。在执行find_package时，实际上 CMake 都是在找这两类文件，找到后从中获取关于库的信息。\n4.1 通过 Config file 找到依赖 Config File 是依赖的开发者提供的 cmake 脚本，通常会随预编译好的二进制一起发布，供下游的使用者使用。在 Config file 里，会对库里包含的 target 进行描述，说明版本信息以及头文件路径、链接库路径、编译选项等 usage requirement\nCMake 对 Config file 的命名是有规定的，对于find_package(ABC)这样一条命令，CMake 只会去寻找ABCConfig.cmake或是abc-config.cmake。CMake 默认寻找的路径和平台有关，在 Linux 下寻找路径包括/usr/lib/cmake以及/usr/lib/local/cmake，在这两个路径下可以发现大量的 Config File，一般在安装某个库时，其自带的 Config file 会被放到这里来。\n4.2 通过 Find file 找到依赖 对于find_package(ABC)命令，如果 CMake 没有找到 Config file，他还会去试着寻找FindABC.cmake。Find file 在功能上和 Config file 相同，区别在于 Find file 是由其他人编写的，而非库的开发者。如果你使用的某个库没有提供 Config file，你可以去网上搜搜 Find file 或者自己写一个，然后加入到你的 CMake 工程中。\nCMake 官方为我们写好了很多 Find file，在CMake Documentation这一页面可以看到，OpenGL，OpenMP，SDL 这些知名的库官方都为我们写好了 Find 脚本，因此直接调用 find_package 命令即可。但由于库的安装位置并不是固定的，这些 Find 脚本不一定能找到库，此时根据 CMake 报错的提示设置对应变量即可，通常是需要提供安装路径，这样就可以通过 Find file 获取到库的 usage requirement。不论是 Config file 还是 Find file，其目的都不只是找到库这么简单，而是告诉 CMake 如何使用这个库。 库 CMake 官方也没有提供 Find file，这时候就要自己写了或者靠搜索了，写好后放到本项目的目录下，修改CMAKE_MODULE_PATH这个 CMAKE 变量：\nlist(INSERT CMAKE_MODULE_PATH 0 ${CMAKE_SOURCE_DIR}/cmake) ${CMAKE_SOURCE_DIR}/cmake目录下的 Find file 就可以被 CMake 找到了。 通过 CMake 的find_library和find_path两个命令就可以完成任务：\nfind_library(MPI_LIBRARY NAMES mpi HINTS \u0026#34;${CMAKE_PREFIX_PATH}/lib\u0026#34; ${MPI_LIB_PATH} # 如果默认路径没找到libmpi.so，还会去MPI_LIB_PATH找，下游使用者可以设置这个变量值 ) find_path(MPI_INCLUDE_DIR NAMES mpi.h PATHS \u0026#34;${CMAKE_PREFIX_PATH}/include\u0026#34; ${MPI_INCLUDE_PATH} # 如果默认路径没找到mpi.h，还会去MPI_INCLUDE_PATH找，下游使用者可以设置这个变量值 ) 4.3.find_package 的处理 find_package这个命令，这个命令可以指定很多参数，比如指定版本，指定具体的模块等等。以 SFML 多媒体库为例，其包含了 network 模块，audio 模块，graphic 模块等等，但我很多时候只用到 graphic 模块，那么其他的模块对应的链接库不需要被链接，于是 CMake 脚本可以这么写：\n# 要求大版本号为2的SFML库的graphic模块 find_package(SFML 2 COMPONENTS graphics REQUIRED) # SFML提供的target名字为sfml-graphics target_link_libraries(MyEXE PRIVATE sfml-graphics) 5.使用 CMake 来编译 CMake 生成好编译环境后，底层的 make, ninja, MSBuild 编译命令都是不一样的，但 CMake 提供了一个统一的方法进行编译：\ncmake --build . 使用\u0026ndash;buildflag，CMake 就会调用底层的编译命令，在跨平台时十分方便。 对于 Visual Studio，其 Debug 和 Release 环境是基于 configuration 的，因此CMAKE_BUILD_TYPE变量无效，需要在 build 时指定：\ncmake --build . --config Release 参考链接: cmake https://ukabuer.me/blog/more-modern-cmake/ Makefile ","permalink":"https://liuz0123.gitee.io/zain/posts/tech/cmake/","summary":"\u003ch2 id=\"1cmake简述\"\u003e1.cmake简述\u003c/h2\u003e\n\u003cp\u003e CMake是跨平台编译管理工具,为第三方依赖和引入,创建编译系统,程序测试及安装.Cmake工具使用CMakeLists.txt文件,跨平台执行相同编译命令,生成对应平台的可执行程序或者链接库.\u003c/p\u003e","title":"cmake"},{"content":"一.简单句子分析 英语句子= 主干+修饰成分 分析句子结构: 一个中心 + 两个要点 一个中心: 动词. 句子必须右动词 两个要点: 主语 + 谓语. 谓语是动词,主语为动作的执行者或接受者. 句子的核心是主谓结构\nn个主语+1个谓语 或者 1个主语+n个谓语，就可以组成简单句。其他的定状补语等都是句子的附属成分。主语部分形式比较单一，通常由名词性的结构来担任。谓语部分的形式变化较多，五种基本句型实际就是通过不同的谓语部分结构来表达五种类型的含义。不管谓语部分如何变化，它都由动词起头，并承担主要的表意功能。\n英语的句子结构分为三种:简单句,并列句,复合句.简单句又分为五种基本句型.\n{% pullquote mindmap mindmap-md %}\n英文句子 简单句 主 + 谓 主 + 谓 + 宾 主 + 谓 + 宾 + 宾补 主 + 谓 + 间宾 + 直宾 主 + 系 + 表 复合句 名词性从句 主语从句 宾语从句 同位语从句 表语从句 定语从句 状语从句 时间状语从句 地点状语从句 条件状语从句 结果状语从句 让步状语从句 目的状语从句 特殊句式 强调句 虚拟语气 倒装句 类型 陈述句 祈使句 感叹句 疑问句 {% endpullquote %}\n英语语法从整体上来讲是通过五部分来组成 1、简单句 2、并列句、复合句 3、三大从句 4、特殊句式 5、类型\n补语 补语是和表意不完全的动词息息相关的。在第三种基本句型中，联系动词将主语和补语在某个意义层面上对等起来。 修饰成分 介词短语 从句 非谓语动词 时间状语 论主语的补语，而后将宾语的补语作为一种变形来讨论\n1.1 S + V （主+谓） 句子不可或缺的两部分. 名词/代词/不定式/动名词 + 动词 谓语动词可以表达完整的意思，这类动词为不及物动词（vi）.\n1.2 S + V + C （主+系+表） 主语 +系动词 +表语\n表语说明主语的状态和性质，可以是名词，形容词，副词，短语等。\n系动词包括：\na. be 动词，am, is, are, was, were;\nb. 表感官：feel(摸起来像是), smell, sound(听起来是), taste(尝起来是), look(看起来是);\nc. 表变化：become(成为), grow, turn(转变为), go, get, fall;\nd. 表状态：remain(依旧是), keep, hold, stay(仍然是), seem(似乎是).\nappear 显得像是 prove 证实为 become 成为 make 作为\n1.3 S + V + O （主+谓+宾） 主语+谓语+宾语\n谓语一般为及物动词（vt.），后面必须要跟宾语才能表达完整的意思。宾语是谓语动词动作的承受者。\n1.4 S + V + O + O（主+谓+间宾(人)+直宾(物)） 谓语动词必须要跟两个宾语才能表达完整意思。两个宾语分别是动作的直接承受者（一般是物）和间接承受者（一般是人）。 e.g.,\ngive sb sth = give sth to sb\ntell sb sth = tell sth to sb\n1.5 S + V + O + C（主+谓+宾+宾补） 此种情况，动词虽然跟了宾语，但句子意思不完整，需要跟上一个补足语，对宾语进行解释说明，句子意思才能完整通顺。 主语的补语用来表示主语是什么。类似地，宾语的补语用来表示宾语是什么。在 S + V + O + C 这个句型当中，宾语和补语之间虽然没有动词存在。但是句子可以变形成：S + V + that + O + V + C 的形式，也就是将原本的宾语和补语以从句的形式出现。因此，可以认为宾语和补语之间有「隐藏的」判断动词「是」的存在。\nThere be 句型\nThere be 句型表示人/物的存在。句子结构，就是There be + 主语+其他部分\n1.主语：句子所陈述的对象。 2.谓语：主语发出的动作。一般是有动作意义的动词。 3. 宾语：分为动词宾语和介词宾语，属于动作的承受者。 4. 系动词：表示状态或状态变化的动词，没有实际的动作意义。如 be, 感官系动词（look, sound, smell, taste 和 feel）、保持类系动词（keep, stay 和 remain）、状态变化类系动词（become、get、turn 和 go）等。 5. 表语：紧跟系动词后面的成分。 6. 定语：修饰名词或代词的成分。 7. 状语： 修饰形容词、副词、动词或句子的成分。 8. 补语：分为宾语补足语和主语补足语。是对宾语和主语的补充说明，与其有主动或被动的逻辑关系。\n参考链接: https://liam.page/2014/06/21/basic-sentence-and-the-complement/ https://www.zhihu.com/question/30030877/answer/768501967\n参考数据 《语法俱乐部》\n复杂句:从简单句演化而来\n简单句没有什么句序的调整，所以翻译起来基本没有什么难度。\n英语中的修饰成分，分定语和状语两种情况。 英语句子 = 主干(五种基本句型) + 修饰成分(定语+状语)\n二、并列句、复合句 简单句通过不同的连接词就成为了不同的句子，通过并列词成了并列句，通过从属连词成了复合句。下面我们就一一讲解 ：\n并列句：简单句+并列词+简单句\n并列词一般有：and / or / but / so /while / yet / for / however\n1）：表示并列：and, not only\u0026hellip;but also\u0026hellip; , neither\u0026hellip;nor\u0026hellip;\nHer father is a doctor and her mother is a teacher .\n2）：表示选择：or, or else, otherwise, either\u0026hellip;or\u0026hellip;\nHurry or you won\u0026rsquo;t make the train.\n3）：表示对比、转折: but, while , yet , however , never ,\nI like tea while she likes coffee .\n4）：表示原因：for\nI am thirsty , for it is hot .\n复合句：简单句+从属连词+简单句\n从属连词有：that / wether/ if\n复合句其实就是我们常说的三大从句，\n三.三大从句 1、名词性从句\n当名词性从句作为句子的不同成分时，又被称呼为不同的名字。\n当作为主语时，称为主语从句。\n当称为宾语时，称为宾语从句，同样表语从句以及同位语从句。以下我们来举个栗子 ：\n主语从句 What she said is wrong .\n宾语从句 I said that she was wrong.\n表语从句 The fact is that he doesn’t really try.\n同位语从句 The news that he will come back is ture.\n记住一点，不管什么从句，你把它当成一个”长一点的名词”。\n那如果这个长名词在句子中作主语，就是主语从句，作宾语就是宾语从句。\n同位语从句就是相当于一个长点的名词对另外一个抽象名词进行解释说明。\n2、定语从句\n修饰限定名词，汉语中“的”前面的内容。\n关系代词引导的定语从句\n1.who指人，在从句中做主语 Yesterday I helped an old man who lost his way.\n2. whom指人，在定语从句中充当宾语，常可省略。\nMr. Ling is just the boy whom I want to see\n3. which指物，在定语从句中做主语或者宾语，做宾语时可省略\nThis is the pen (which) he bought yesterday.\n4. that指人时，相当于who 或者whom；指物时，相当于which。\n5. whose通常指人，也可指物，在定语从句中做定语。\n指的是谁的。Do you like the book whose cover is yellow?\n关系副词引导的定语从句\nwhen where why\n3、状语从句\n修饰动作的发生的时间、地点、原因、方式\n九大状语从句\n1、时间状语从句\n常用引导词：when, as, while, as soon as, before, after, since , till, until\n特殊引导词：the minute, the moment, the second, every time, the day，the instant,\nI was fat when I was a child.\n2、地点状语从句\n常用引导词：where\n特殊引导词：wherever, anywhere, everywhere\nKeep it where you can see it.\n3、原因状语从句\n常用引导词：because, since, as, for\n特殊引导词：seeing that, now that, in that, considering that, given that.\nMy friends dislike me because I’m beautiful .\n4、目的状语从句\n常用引导词：so that, in order that\n特殊引导词：lest, in case, for fear that，in the hope that, for the purpose that, to the end that\nstudy hard so that you can pass the exam.\n5、结果状语从句\n常用引导词：so … that, so… that, such … that,\n特殊引导词：such that, to the degree that, to the extent that, to such a degree that,\nHe got up so early that he caught the first bus.\n6、条件状语从句\n常用引导词：if, unless,\n特殊引导词：as/so long as, only if, providing/provided that, supposing that, in case that, on condition that\nIf you ask him, he will help you.\n7、方式状语从句\n常用引导词：as, as if, how\n特殊引导词：the way\nThink as i think\n8、比较状语从句\n常用引导词：as(同级比较), than(不同程度的比较)\n特殊引导词：the more … the more … ; just as …， so…; A is to B what /as X is to Y; no … more than; not A so much as B\nThe house is three times as big as ours.\n9、让步状语从句\n常用引导词：though, although, even if, even though\n特殊引导词： as(用在让步状语从句中必须要倒装)，while ( 一般用在句首 )，no matter …， in spite of the fact that, while, whatever, whoever, wherever, whenever, however, whichever\nThough I believe it, yet I must consider.\n四.特殊句式 1、强调句\nIt is （名词 / 介宾）指的是被强调的内容that （\u0026hellip;\u0026hellip;..）\nIt was she whom we are talking about.\n2、倒装句\n正常句序 ：主谓宾\n倒装句序 ：谓主宾\nwe can win only through hard work .\nonly through hard work can we win .\n3、虚拟语气，假设不可能发生的事情\n1、对过去情况的虚拟\n从句用 had done\n主句用 would could might should have done\n2、对现在情况的虚拟\n从句用 did , was变成were\n主句用 would could might should do\n3、对将来情况虚拟\n从句用 did ，was 变成 were，should do,were to do\n主句用 would could might should do\n五.类型 陈述句\ni like English very much . 我非常喜欢英语。\n疑问句\nis this your key ? 这是你的钥匙吗？\n祈使句\n一种是以动词原形开头，在动词原形之前加do (但只限于省略第二人称主语的句子)。\nmind you head 小心碰头！\n第二种祈使句以let开头\nLet\u0026rsquo;s have another try\n感叹句\nwhat a brave girl ! 真是个勇敢的女孩子\nhttps://zhuanlan.zhihu.com/p/400448345\n","permalink":"https://liuz0123.gitee.io/zain/posts/blog/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95%E4%B8%80/","summary":"\u003ch2 id=\"一简单句子分析\"\u003e一.简单句子分析\u003c/h2\u003e\n\u003cp\u003e \u003cstrong\u003e英语句子= 主干+修饰成分\u003c/strong\u003e\n 分析句子结构:\n  一个中心 + 两个要点\n  一个中心: 动词. 句子必须右动词\n  两个要点: 主语 + 谓语. 谓语是动词,主语为动作的执行者或接受者.\n  \u003cstrong\u003e句子的核心是主谓结构\u003c/strong\u003e\u003c/p\u003e","title":"英语语法一"},{"content":"hugo运行 hugo -F --cleanDestinationDir # 本地预览 hugo server 参考链接：\nhttps://www.sulvblog.cn/\nhttps://www.jianshu.com/p/fa95c0c1fdab\nhttps://lishensuo.github.io/\nhttps://freeze.org.cn/page/7/#main https://blog.csdn.net/qq_45975757/article/details/108923612\nhttps://luckyu.com.cn/index.html?_sw-precache=b052c2fa6d5b2f1a059fb72907f20d38\nhttps://blog.csdn.net/qq_45975757/article/details/108923612\nmongodb+srv://twikoo:zhuang738191@cluster0.dzagnuh.mongodb.net/?retryWrites=true\u0026amp;w=majority {\u0026#34;code\u0026#34;:100,\u0026#34;message\u0026#34;:\u0026#34;Twikoo 云函数运行正常，请参考 https://twikoo.js.org/quick-start.html#%E5%89%8D%E7%AB%AF%E9%83%A8%E7%BD%B2 完成前端的配置\u0026#34;,\u0026#34;version\u0026#34;:\u0026#34;1.6.7\u0026#34;} 托管 为了提高访问速度托管在gitee上，迁移完成后将会同时托管到github中。 通过不同分支保存源码和静态网页内容，用br_hugo管理源码，master分支管理public\nhexo # 清理缓存 hexo clean # 生成网页 hexo g # 启动本地服务端口 hexo s # 发布到github hexo d # 强制推送备份源码分支 git push -f origin backup GitHub Pages + Hexo使用及配置 github上创建一个 username.github.io 的工程，username 必须为github的用户名\n参考链接 https://www.jianshu.com/p/f82c76b90336\nhttps://www.jianshu.com/p/5d0b31032d55\nhttps://blog.csdn.net/weixin_41922289/article/details/95639870\nhttps://theme-next.org/\nhttps://hexo.io/zh-cn/docs/\nhttps://www.jianshu.com/p/3a05351a37dc\nhttps://www.zhyong.cn/posts/ca02/\nhttp://theme-next.iissnan.com/\nhttps://liam.page/\nhttps://liam.page/en/\nHexo博客添加helper-live2d动态模型插件 https://blog.csdn.net/qq_30930805/article/details/ ","permalink":"https://liuz0123.gitee.io/zain/posts/blog/blog/","summary":"hugo运行 hugo -F --cleanDestinationDir # 本地预览 hugo server 参考链接： https://www.sulvblog.cn/ https://www.jianshu.com/p/fa95c0c1fdab https://lishensuo.github.io/ https://freeze.org.cn/page/7/#main https://blog.csdn.net/qq_45975757/article/details/108923612 https://luckyu.com.cn/index.html?_sw-precache=b052c2fa6d5b2f1a059fb72907f20d38 https://blog.csdn.net/qq_45975757/article/details/108923612 mongodb+srv://twikoo:zhuang738191@cluster0.dzagnuh.mongodb.net/?retryWrites=true\u0026amp;w=majority {\u0026#34;code\u0026#34;:100,\u0026#34;message\u0026#34;:\u0026#34;Twikoo 云函数运行正常，请参考 https://twikoo.js.org/quick-start.html#%E5%89%8D%E7%AB%AF%E9%83%A8%E7%BD%B2 完成前端的配置\u0026#34;,\u0026#34;version\u0026#3","title":"hexo-\u003ehugo迁移"},{"content":"ubuntu 换源 # 备份 cp /etc/apt/sources.list /etc/apt/sources.list.20211013 lsb_release -c lsb_release -a # sudo apt-get update sudo apt-get upgrade 参考链接：ubuntu20.04更改国内镜像源 https://blog.csdn.net/qq_48490728/article/details/124944114 https://blog.csdn.net/weixin_44916154/article/details/124581334\n安装搜狗输入法 https://blog.csdn.net/Mr_Sudo/article/details/124874239\nubuntu 显示 https://ubuntuqa.com/article/8837.html\nhttps://www.csdn.net/tags/MtTaAgzsNjg5MTk4LWJsb2cO0O0O.html\nUbunut 22.04 LTS 版本 GNU/Linux核心\nGCC 11.2.0 binutils 2.38 glibc 2.35 编译工具链\nPython 3.10.4 Perl 5.34.0 LLVM 14 golang 1.18 rustc 1.58 OpenJDK Ruby 3.0 systemd 249.11 OpenSSL 3.0 虚拟化\nqemu 6.2.0 libvirt 8.0.0 virt-manager 4.0.0 Linux包管理 snap flameshot截图工具 # 快捷方式 flameshot gui https://www.cnblogs.com/kendoziyu/p/how_to_screenshot_in_ubuntu2004.html ","permalink":"https://liuz0123.gitee.io/zain/posts/blog/linuxtool/","summary":"ubuntu 换源 # 备份 cp /etc/apt/sources.list /etc/apt/sources.list.20211013 lsb_release -c lsb_release -a # sudo apt-get update sudo apt-get upgrade 参考链接：ubuntu20.04更改国内镜像源 https://blog.csdn.net/qq_48490728/article/details/124944114 https://blog.csdn.net/weixin_44916154/article/details/124581334 安装搜狗输入法 https://blog.csdn.net/Mr_Sudo/article/details/124874239 ubuntu 显示 https://ubuntuqa.com/article/8837.html https://www.csdn.net/tags/MtTaAgzsNjg5MTk4LWJsb2cO0O0O.html Ubunut 22.04 LTS 版本 GNU/Lin","title":"linuxTool"},{"content":"Vim vim快捷方式 # 编辑模式 i a o # i 进入编辑模式 # 退出ESC 返回命令模式 # 保存退出 wq # 放弃退出 !q # 回到文件首部 gg # 到文件尾部 GG # 查找 / # 粘贴 p # 史上最全的vim快捷键 Vim使用笔记 Windows使用Vim 在Windows系统中，安装git后已经存在vim，找到vim.exe所在目录，添加到环境变量path中即可。 Windows下载 Vim安装 参考博客：在Windows下安装和使用vim PowerVim PowerVim快捷键 ;n # 打开文件目录树显示在屏幕左侧 ;m # 打开当前函数和变量目录树显示在屏幕右侧 ;w # 保存文件 ;u # 向上翻半屏 ;d # 向下翻半屏 ;1 # 光标快速移动到行首 ;2 # 光标快速移动到行末 ;a # 快速切换.h和cpp文件，写C++的时候很方便 ;e # 打开一个新文件 ;z # 切回shell交互命令，输入fg在切回vim，非常实用 ;s # 水平分屏，并打开文件目录选取想打开的文件，如果想新建文件，;e 就好 ;v # 竖直分屏，并打开文件目录选取想打开的文件，如果想新建文件，;e 就好 ;fw # 查找项目内关键字 ;ff # 查找项目内文件名 ;gt # 跳转到变量或者函数定义的地方，前提是安装ctags，并且在在PowerVim输入 ;tg命令 Jump to the definition of the keyword where the cursor is located, but make sure you have make ctags ;gr # 跳回，对应着;gt ;tg # 对当前目录打ctag ;y # 保存当前选中的目录到系统剪切板，前提是vim支持系统剪切板的寄存器 dsfa;w ;h/l/k/j # 光标向左右上下窗口移动，特别是打开多个窗口。使用这个快捷键组合非常实用 ;gg # 按顺序光标跳转各个窗口 # Shortcuts without ; e # 快速删除光标所在的词 tabc # 关闭当前tab，可以用:tabnew来打开一个新的tab Close tab, of course you should :tabnew a file first. F1 # 编译C++代码，自己写的C++例子的时候一键编译。前提手动在当前目录建一个bin文件夹，这是用来存放编译产生的执行文件 gc # 快速注释选中的块（是visual模式下选中的块） gcc # 快速当前行 { # 光标向上移动一个代码块s } # 光标向下移动一个代码块 PowerVim安装及配置 【VIM】PowerVim安装及使用\nPowerVim - 使Vim更加强大易用\n安装PowerVim 问题解决过程记录\nctags ","permalink":"https://liuz0123.gitee.io/zain/posts/blog/vim/","summary":"Vim vim快捷方式 # 编辑模式 i a o # i 进入编辑模式 # 退出ESC 返回命令模式 # 保存退出 wq # 放弃退出 !q # 回到文件首部 gg # 到文件尾部 GG # 查找 / # 粘贴","title":"vim"},{"content":"windows 工具软件 Snipaste 截图软件 支持自定义设置快捷键 Download\nZoomIt 屏幕缩放、标记、录制 展示小工具 whois 居然可以在Windows使用 Download\nSysinternals 工具集 Download\neveryting 快速查找文件 Download\n7zip 开源压缩软件 Download\nWiztree 磁盘文件占用 Download\nWindows Terminal 取代传统cmd显示，可集成PowerShell， 登录wsl， 未来Windows将设置为默认终端 微软商店\nPowerShell 一款shell，支持Windows、linux、mac，推荐Windows结合 Windows Terminal使用, 使Windows像Linux终端一样爽 Download\nwinget search Microsoft.PowerShell winget install Microsoft.PowerShell 参考链接：\nWindows Powershell和Windows Terminal的区别\n安装和设置 Windows 终端\nQ-Dir 多窗口资源管理器 Download\nFileZilla 多协议文件传送，支持FTP、SFTP，包含Client和Server，支持Windows、Linux、mac Download\n终端连接程序 secureCRT 需要破解 https://blog.csdn.net/qq_39052513/article/details/104692026\nvscode vscode 上传图片 # 上传剪贴板中的图片到服务器。 ctrl + alt + u # 打开文件浏览器选择图片上传。 ctrl + alt + e https://www.jianshu.com/p/868b3a2028f8 https://zhuanlan.zhihu.com/p/131584831 Windows包管理 Scoop Scoop 是 Windows 的命令行安装程序，是一个强大的包管理工具\n项目地址\n使用教程\nChocolatey choro Windows软件管理工具Chocolatey的安装和使用\nwinget 官方推出 谁用Windows 终端安装程序？ 我！\n# 使用 WinGet 安装一遍 winget install postman winget search postman # 卸载，再用 Scoop 安装一遍 scoop install postman vcpkg C/C++ 库管理工具，跨平台 Get started with vcpkg\ncget https://cget.readthedocs.io/en/latest/#\n开源库集成器Vcpkg全教程\nWSL 安装ubuntu20.04 安装到非系统盘目录，下载离线安装包，复制到想要安装的目录下，解压，以管理员身份运行ubuntu2004.exe\n卸载wsl wslconfig /l # 从列表中选择要卸载的发行版（例如Ubuntu）并键入命令 wslconfig /u Ubuntu 参考链接：WSL系列操作：安装，卸载\n设置wsl # 更改默认root用户登录 ubuntu1804.exe config --default-user root # 更改默认登陆目录 # list 中 Ubuntu-20.04 条目中添加 \u0026#34;startingDirectory\u0026#34;: \u0026#34;//wsl$/Ubuntu-20.04\u0026#34; # 以管理员权限运行cmd # 停止 net stop LxssManager # 启动 net start LxssManager 图床 https://blog.csdn.net/qq_44314954/article/details/122951033\n\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;未整理部分\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\nrustdesk 远程开源软件\nmaya\nimagine\nscreentogif\nditto\nbleachbit\nqbittorrent\ngrammarly\npotplayer https://iptv-org.github.io/iptv/index.m3u\n剪切板win10自带的有很多剪切记录的快捷键Windows键➕V键\n线上思维导图 https://gitmind.cn/app/template 在线文档转换 https://www.aconvert.com/cn/ 开源软件下载网站 https://www.fosshub.com/#\nwindows ternial 添加 git base 到ternial chrome插件 油猴\nwindows输入英文中间有间隙 进入了全角模式，选择半角即可\nReact Router http://react-guide.github.io/react-router-cn/index.html\nyoutube 下载 https://www.ganbey.com/youtube-download-3774\nzlog https://blog.csdn.net/twd_1991/article/details/80481920\nhttp://hardysimpson.github.io/zlog/UsersGuide-CN.html\ngdb https://leetcode-cn.com/circle/article/7mxorv\n","permalink":"https://liuz0123.gitee.io/zain/posts/blog/windowssoftware/","summary":"windows 工具软件 Snipaste 截图软件 支持自定义设置快捷键 Download ZoomIt 屏幕缩放、标记、录制 展示小工具 whois 居然可以在Windows使用 Download Sysinternals 工具集 Download everyting 快速查找文件 Download 7zip 开源压","title":"WindowsSoftware"},{"content":"启动U盘制作 下载镜像 Ubuntu 镜像 Ubuntu 20.04\u0026amp;22.04\nWindows\n镜像烧录工具 软碟通UltraISO 写入镜像，树莓派刷镜像\nVentoy 官方网站 Ventoy支持多个ISO镜像，开源，支持Linux和Windows ventoy详细使用教程 制作完启动盘，将ISO复制到U盘即可\nWinPE 支持多镜像 支持多镜像\n安装系统 小米 F2设置boot密码，重启F12安装Ubuntu\nThinkpad Q\u0026amp;A 什么功能Windows上有，在Linux没有又没有替代方法 ","permalink":"https://liuz0123.gitee.io/zain/posts/blog/system/","summary":"启动U盘制作 下载镜像 Ubuntu 镜像 Ubuntu 20.04\u0026amp;22.04 Windows 镜像烧录工具 软碟通UltraISO 写入镜像，树莓派刷镜像 Ventoy 官方网站 Ventoy支持多个ISO镜像，开源，支持","title":"系统安装"},{"content":"","permalink":"https://liuz0123.gitee.io/zain/posts/life/life/","summary":"","title":"Life"},{"content":"","permalink":"https://liuz0123.gitee.io/zain/posts/read/movie/movie/","summary":"","title":"Movie"},{"content":" QMD 《如愿》-王菲 天后依然\n","permalink":"https://liuz0123.gitee.io/zain/posts/read/music/music/","summary":"QMD 《如愿》-王菲 天后依然","title":"Music"},{"content":"软件故事 1946年 ENIAC\n批处理系统 硬件发展-》 分时系统 机器语言\u0026ndash;纸带 汇编语言\u0026ndash; 指令 操作 Fortran语言 - 第一种高级计算机语言 COBOL 语言 BASIC\n卡耐基 \u0026ndash; 人工智能\nIBM 701 704(Fortran商用) IBM OS/360\n存储时计算机\nUnix c 语言\n欧洲计算机技术： linux 芬兰 万维网 瑞典\nAPPLE II Macish\n微软 收购DOS\nwindows BASIC\n鼠标、 显示器\nC++\nJava Java与互联网\n阿帕奇 IBM linux\n硅谷百年 硅谷 斯坦福、伯克利、圣何塞大学\n特曼\n真空管、晶体管、集成电路 仙童半导体 - 八叛徒 英特尔、AMD、英伟达\n","permalink":"https://liuz0123.gitee.io/zain/posts/read/read/computerbook/","summary":"\u003ch2 id=\"软件故事\"\u003e软件故事\u003c/h2\u003e\n\u003cp\u003e1946年 ENIAC\u003c/p\u003e\n\u003cp\u003e批处理系统\n硬件发展-》 分时系统\n机器语言\u0026ndash;纸带\n汇编语言\u0026ndash; 指令 操作\nFortran语言 - 第一种高级计算机语言\nCOBOL 语言\nBASIC\u003c/p\u003e","title":"computerbook"},{"content":"《Lesson from the Edge》 来自边缘的教训\u0026ndash;约瓦诺维奇 前USA驻乌克兰大使\n《局外人》 加缪 个人主义，无知是最大的邪恶 《culture evolution》 文化的演进 ronald inglehart教授 什么原因猝发个人主义\n《结构性思维》\n","permalink":"https://liuz0123.gitee.io/zain/posts/read/read/readingplan/","summary":"《Lesson from the Edge》 来自边缘的教训\u0026ndash;约瓦诺维奇 前USA驻乌克兰大使 《局外人》 加缪 个人主义，无知是最大的邪恶 《cultur","title":"Reading Plan"},{"content":"豆豆三部曲 《背叛》 《遥远的救世主》 《天幕红尘》\n在细雨中呼唤 余华 普通农村少年以旁观者角度叙述自己的童年少年成长，世间人都处于一辆时光列车中，其中遇到的人和事，不管他们是好的还是坏的，未来的未知都无可逃避，唯一能做好的就是：好好活着，珍惜眼前的一切，做最好的自己。\n死亡不是失去生命，只是走出了时间\n通往奴役之路 如果我们仅仅只是一部无人性的机器中的一个齿轮，这也许不是好事情；但如果我们再也无法脱离它，被束缚在为我们选定的那些上级的身边，那么情况就不知道要糟糕多少倍。当每个人意识到他的命运的不满，就会同他的这种意识一起成长。\n","permalink":"https://liuz0123.gitee.io/zain/posts/read/read/read/","summary":"豆豆三部曲 《背叛》 《遥远的救世主》 《天幕红尘》 在细雨中呼唤 余华 普通农村少年以旁观者角度叙述自己的童年少年成长，世间人都处于一辆时光列车中，其","title":"读书"},{"content":"","permalink":"https://liuz0123.gitee.io/zain/posts/read/%E9%97%B2%E8%A8%80%E7%A2%8E%E8%AF%AD/","summary":"","title":"闲言碎语"},{"content":"编译 注意wsl中需要root用户编译 https://dynamorio.org/page_building.html cmake \\ -DCMAKE_TOOLCHAIN_FILE=/mnt/e/code/dynamorio/make/toolchain-android=arm64.cmake \\ -DANDROID_TOOLCHAIN=/android_toolchain_using \\ -DDR_COPY_TO_DEVICE=OFF \\ -DCMAKE_BUILD_TYPE=Debug \\ -DBUILD_TESTS=OFF \\ -DBUILD_SAMPLES=ON \\ -DBUILD_CLIENTS=ON \\ ../dynamorio cmake \\ -DDR_COPY_TO_DEVICE=OFF \\ -DCMAKE_BUILD_TYPE=Debug \\ -DBUILD_TESTS=OFF \\ -DBUILD_SAMPLES=ON \\ -DBUILD_CLIENTS=ON \\ ../dynamorio 学习链接 DynamoRIO进阶指南 https://blog.csdn.net/oShuangYue12/article/details/109780166 ","permalink":"https://liuz0123.gitee.io/zain/posts/tech/dynamorio/","summary":"\u003ch2 id=\"编译\"\u003e编译\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e注意wsl中需要root用户编译\n\u003ca href=\"https://dynamorio.org/page_building.html\"\u003ehttps://dynamorio.org/page_building.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecmake \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e-DCMAKE_TOOLCHAIN_FILE\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e/mnt/e/code/dynamorio/make/toolchain-android\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003earm64.cmake \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e-DANDROID_TOOLCHAIN\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e/android_toolchain_using \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e-DDR_COPY_TO_DEVICE\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eOFF \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e-DCMAKE_BUILD_TYPE\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eDebug \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e-DBUILD_TESTS\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eOFF \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e-DBUILD_SAMPLES\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eON \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e-DBUILD_CLIENTS\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eON \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e../dynamorio\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecmake \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e-DDR_COPY_TO_DEVICE\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eOFF \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e-DCMAKE_BUILD_TYPE\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eDebug \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e-DBUILD_TESTS\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eOFF \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e-DBUILD_SAMPLES\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eON \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e-DBUILD_CLIENTS\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eON \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e../dynamorio\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"DynamoRIO"},{"content":" 参考博客： https://programmercarl.com/ https://mp.weixin.qq.com/s/AWsL7G89RtaHyHjRPNJENA 总结 leetcode基础题目 1.两数之和 思路：两层循环\nint* twoSum(int* nums, int numsSize, int target, int* returnSize){ *returnSize = 0; int* res = (int *)malloc(sizeof(int) * 2); for (int i = 0; i \u0026lt; numsSize; i++) { int tmp = target - nums[i]; for (int j = i + 1; j \u0026lt; numsSize; j++) { if (nums[j] == tmp) { res[0] = i; res[1] = j; *returnSize = 2; } } } return res; } 2.两数相加 思路：两个链表，判断链表是否为空，求和不为空链表节点，第一次添加到头节点，之后添加到尾节点，最后判断进位\nstruct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) { struct ListNode* head = NULL; struct ListNode* tail = NULL; int carry = 0; while (l1 || l2) { int n1 = l1 ? l1-\u0026gt;val : 0; int n2 = l2 ? l2-\u0026gt;val : 0; int sum = n1 + n2 + carry; if (!head) { head = tail = malloc(sizeof(struct ListNode)); tail-\u0026gt;val = sum % 10; tail-\u0026gt;next= NULL; } else { tail-\u0026gt;next = malloc(sizeof(struct ListNode)); tail-\u0026gt;next-\u0026gt;val = sum % 10; tail = tail-\u0026gt;next; tail-\u0026gt;next = NULL; } carry = sum / 10; if (l1) { l1 = l1-\u0026gt;next; } if (l2) { l2 = l2-\u0026gt;next; } } if (carry \u0026gt; 0) { tail-\u0026gt;next = malloc(sizeof(struct ListNode)); tail-\u0026gt;next-\u0026gt;val = carry; tail-\u0026gt;next-\u0026gt;next = NULL; } return head; } 3. 无重复字符的最长子串 双指针，前后快慢指针，table表标记字符是否出现过，fast标记，slow去除标记，求 fast-slow 最大值\nint lengthOfLongestSubstring(char * s){ int slow = 0; int fast = 0; int len = strlen(s); int table[256] = {0}; int maxLen = 0; // fast从0开始 while (fast \u0026lt; len) { if (table[s[fast]] == 0) { table[s[fast]] = 1; fast++; //} else if (table[s[right]] == 1) { } else { table[s[slow]] = 0; slow++; } maxLen = fmax(maxLen, fast - slow); } return maxLen; } 4. 寻找两个正序数组的中位数 思路：每个数组各自索引，判断大小移动索引，最后判断是奇数还是偶数\ndouble findMedianSortedArrays(int* nums1, int nums1Size, int* nums2, int nums2Size){ int numSize = nums1Size + nums2Size; int* res = (int *)malloc(sizeof(int) * numSize); int half = numSize / 2 + 1; int p1 = 0; int p2 = 0; for (int i = 0; i \u0026lt; half; i++) { int n; if (p1 \u0026lt; nums1Size \u0026amp;\u0026amp; p2 \u0026lt; nums2Size) { n = nums1[p1] \u0026lt; nums2[p2] ? nums1[p1++] : nums2[p2++]; } else if (p1 \u0026lt; nums1Size) { n = nums1[p1++]; } else if (p2 \u0026lt; nums2Size) { n = nums2[p2++]; } res[i] = n; } if (numSize % 2 == 0) { return (res[half - 1] + res[half - 2]) / 2.0; } else { return res[half-1]; } } 6. 字形变换 ","permalink":"https://liuz0123.gitee.io/zain/posts/tech/leetcode%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE/","summary":"参考博客： https://programmercarl.com/ https://mp.weixin.qq.com/s/AWsL7G89RtaHyHjRPNJENA 总结 leetcode基础题目 1.两数之和 思路：两层循环 int* twoSum(int* nums, int numsSize, int target, int* returnSize){ *returnSize = 0; int* res = (int *)malloc(sizeof(int) * 2); for (int i = 0; i \u0026lt; numsSize; i++) { int tmp = target - nums[i]; for","title":"leetcode基础题目"},{"content":"Linux Kernel阅读工具 需要多久才能看完linux内核源码？\nLinux内核代码下载 Linux kernel官网 https://www.kernel.org/\n解压 linux-5.19.10.tar.xz\ntar -xvf linux-5.19.10.tar.xz https://blog.csdn.net/m0_49328056/article/details/121669035\ngdb 《100个gdb小技巧》\nkbuild Kbuild: the Linux Kernel Build System Kernel Build System¶\nhttps://www.zhihu.com/question/47039391/answer/2287806626\nELF 开源库 lief\n参考链接： https://blog.csdn.net/GrayOnDream/article/details/124564129\n","permalink":"https://liuz0123.gitee.io/zain/posts/tech/linuxreadtool/","summary":"Linux Kernel阅读工具 需要多久才能看完linux内核源码？ Linux内核代码下载 Linux kernel官网 https://www.kernel.org/ 解压 linux-5.19.10.tar.xz tar -xvf linux-5.19.10.tar.xz https://blog.csdn.net/m0_49328056/article/details/121669035 gdb 《100个gdb小技巧》","title":"Linux Read Tool"},{"content":"","permalink":"https://liuz0123.gitee.io/zain/posts/tech/tech/","summary":"","title":"Tech"},{"content":"\rZain\u0026#39;s Blog\r一个记录技术、阅文、生活的博客\r👉 越过长城，走向世界 Across the Great Wall we can reach every corner in the world \u0026ndash; 1987.09.14 Chromego\n","permalink":"https://liuz0123.gitee.io/zain/links/","summary":"Zain\u0026#39;s Blog 一个记录技术、阅文、生活的博客 👉 越过长城，走向世界 Across the Great Wall we can reach every corner in the world \u0026ndash; 1987.09.14 Chromego","title":"🤝闲言俗语"},{"content":"\n英文名: zain Lz 职业: 程序员 运动: 跑步、篮球、爬山 网址： https://liuz0123.gitee.io/zain 图标： https://liuz0123.gitee.io/zain/img/Q.gif 描述： 一个记录技术、阅读、生活自用博客, hexo To hugo 迁移中 思考、觉悟、成长、沉静，时而逗比，时而安静，明心见性 👉Hugo博客交流群\r787018782\n","permalink":"https://liuz0123.gitee.io/zain/about/","summary":"英文名: zain Lz 职业: 程序员 运动: 跑步、篮球、爬山 网址： https://liuz0123.gitee.io/zain 图标： https://liuz0123.gitee.io/zain/img/Q.gif 描述： 一个记录技术、阅读、生活自用博客, hexo To hugo 迁移中 思考、觉悟、成长、沉静，时","title":"🙋🏻‍♂️关于"}]